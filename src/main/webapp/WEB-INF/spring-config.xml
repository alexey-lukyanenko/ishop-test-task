<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.0.xsd"
>
    <context:annotation-config/>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:./ishop" />
        <property name="username" value="ishop" />
        <property name="password" value="ishop" />
        <property name="suppressClose" value="true"/>
    </bean>
    <bean id="flyway"
          class="org.flywaydb.core.Flyway"
          init-method="migrate">
        <property name="dataSource" ref="dataSource" />
        <property name="locations">
            <list>
                <value>sql</value>
            </list>
        </property>
    </bean>

    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="service"
          class="com.intetics.lukyanenko.service.ShopService"
          depends-on="flyway">
        <constructor-arg ref="dataFactory"/>
    </bean>

    <bean id="dataFactory"
          class="com.intetics.lukyanenko.dao.jdbc.JDBCDAOFactory">
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.AppUserDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.OrderDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.OrderDetailDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.GoodsCategoryDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.GoodsItemDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.intetics.lukyanenko.dao.jdbc.CustomerDAOImpl">
                <property name="JdbcTemplate" ref="jdbcTemplate"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean scope="prototype" class="com.intetics.lukyanenko.models.AppUser"/>
    <bean scope="prototype" class="com.intetics.lukyanenko.models.Customer"/>
    <bean scope="prototype" class="com.intetics.lukyanenko.models.GoodsCategory"/>
    <bean scope="prototype" class="com.intetics.lukyanenko.models.GoodsItem"/>
    <bean scope="prototype" class="com.intetics.lukyanenko.models.Order"/>
    <bean scope="prototype" class="com.intetics.lukyanenko.models.OrderDetail"/>
</beans>
